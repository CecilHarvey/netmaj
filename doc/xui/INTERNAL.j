  netmajは、analize.cを入れ換えることで、新しいアルゴリズムを持つマー
ジャンプレーヤーを作ることができます。
  analize.cを差し替えて新しいコンピュータプレーヤーを作るときの参考に
してください。
  ただ、うそが混じっているかもしれないので気をつけて。

auto(analize.c)を改造して、新しいコンピュータプレーヤーを作る時のメモ


escape.c+kanalize.cを用いて新しいコンピュータプレーヤーを作ってみた。
そのときにいろいろソースを眺めていたときに作ったメモ。


順子のパイを認識するためのマクロ／関数

それぞれ、パイの種類を表す値を引数にとる。

K_PREV(x)
  前のパイを取り出す。１ー９、東南西北、白発中の順序. それぞれ、１の前は、９。
東の前は、北。中の前は白になる。
K_NEXT(x)
  後のパイを取り出す。１ー９、東南西北、白発中の順序. それぞれ、９の後は、１。
北の後は、東。白の後は中になる。

K_PREV2(x)
  数字のパイについて前のパイを取り出す。ない場合は、０。
K_NEXT2(x)
  数字のパイについて後のパイを取り出す。ない場合は、０。

手のパイを管理するための構造体  hand_t, ahand_t構造体

hand_t構造体

  hand_t構造体は、paiデータを、通し番号でもっている。
  つまり、同じ５のピンズでも４枚はそれぞれ値が異なる。
  hand_t構造体内のデータは、画面表示などに利用される。

ahand_t構造体

  ahand_tは、手を意味的なパートへ分解するしたデータを保持している。
  保持しているhand_t構造体から変換されてahand_t構造体に格納される。
  ahand_t構造体は、paiデータを、パイの種類のコードに変換したものでパイデータ
を保持している。
  ahand_t構造体は、あがり役の決定や、現在のパイの構成などの意味的な解釈を
行なうためのデータを保持するときに利用される。

 以下のとおり。

 AH_V3_FIXED	ないた場合で、刻子に確定している
 AH_H3_FIXED	ないた場合で、順子に確定している
 AH_V3		刻子になっている。
 AH_V2		２つの同じ値の並び
 AH_H3		順子になっている
 AH_H2a		両面待ち
 AH_H2b		ペンチャン待ち
 AH_H2c		カンチャン待ち

  意味的なパートへ解釈できなかったパイは、ahand_tのrestに残っている。
rest_numがその数。


ahand_analize

  ahand_t構造体を使う主関数は、ahand_analizeである。この関数は、手を上に
挙げたような意味のあるパートへ分解する。
ahand_analizeは、手を可能性のある限り、複数のパターンに分解する。
  複数のパターンに分解された手は、result_ahand変数に、result_cnt分、格
納される。普通に和了がった場合、和了がりのパターンはその複数のパターン
のうちのいずれかになる。ただし、赤ドラなどの特定のパイを用いるものにつ
いてはahand_tの情報のみではその点数を正しく判定できないので、その場合
は、hand_tを用いることになる。

河

  河へ出たパイは、４人をまたいで、順序よくリストとして保持されています。

アトリビュート

河のパイにはアトリビュートがつきます。
説明がちょっと散文風でわかりにくいですが、アトリビュートは、

 どういうふうに河に出たか。
 そのパイへの反応
 河のパイそのものに対するアクション

ぐらいの３種類にわかれています。

判定について

コンピュータプレーヤーを作る時は、以下のような判定が必ず必要になります。

あがることができるかどうかの判定
テンパイかどうかの判定
リーチできるかどうかの判定
カンできるかどうかの判定
チーできるかどうかの判定
ポンできるかどうかの判定

これらについては決まり文句がありますので、netmajのソース、
xui/src/xui/res.c, xui/src/xui/advice[2].cを参照してください。

その他

  analize.cは、非常によくできていて、バランスがとれたコンピュータプレー
ヤーです。ひととおりのことはやってくれてます。

  analize.cは、TUNE.jにもあるとおり、ひとつひとつのパイに点数をつけ、
もっとも点数が小さいものを捨てます。
  パイ（手）は、複数の意味的なパートに分割されますが、その分割の仕方は複数
パターンあるため、そのパートの認識ごとに点数が加算されるため、1223344
などのようないくつにも分割できるような手の場合、点数が２重に計算される
ため、予想しない結果をもたらすことがないとはいえません。
  とくに、３面待ちなどについては、パラメータにもよりますが、序盤で、３
面待ちを崩してしまうことが多いようです。

コンピュータプレーヤーを強くするためには
  コンピュータプレーヤーを強くするには、メンタンピン狙いからなんとか
してゆくというのが、コンピュータマージャンでは常道のようです。
ただ、一定以上になると自在な手が要求されるようです。

1.2.8以降のanalize.c

   netmaj-1.2.8以降のanalize.cは、suzさんが書き直して、ずいぶんと強く
なりました。わたし（へぼなんですが）のプレーした限りでは、わたしの勝率
が、20-40%と人間が相手なみになったようです。
  analize.cのアルゴリズムの中に、ポリシーという概念も導入され、パラメー
タ次第では、かなりくせのある役指向のコンピュータプレーヤーを作ることも
可能になっています。ポリシーとパラメータに従って、手牌に応じた、自在な
対応が行なわれるようになったようで、プレーしていてかなり勉強になります。
もはや、マージャンアルゴリズムの研究以外では（単に遊ぶだけならば）、
analize.cを自分で作るというような必要はないかもしれません。(あとは、戦
略（ポイント、順位、局に応じた打牌の変化）、おりるとおりるタイミング？
の研究ぐらい？)
  ということで、非公式の超弱気アルゴリズムescape.c+kanailize.cは公開さ
れることなくおくらいりです。

Copyright (C) 1995 Todo Software All rights reserved.
